{"version":3,"sources":["components/Table.module.css","components/TableBody.module.css","components/SearchBar.module.css","components/EditForm.js","components/SearchBar.js","components/TableBody.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","EditForm","props","editData","setTableData","tableData","setEditData","useState","name","setName","email","setEmail","type","value","onChange","e","preventDefault","target","onClick","event","newData","updatedData","map","item","id","console","log","SearchBar","searchFilter","className","styles","placeholder","TableBody","setSelectedRows","deleteSelectedRow","selectedRows","editRowHandler","Fragment","row","val","prevState","checked","includes","role","PAGE_SIZE","Table","allData","setAllData","paginatedData","setPaginatedData","currentPage","setCurrentPage","isCheckedAll","setIsCheckedAll","useEffect","fetch","then","res","json","slice","pageCount","Math","ceil","length","numberOfPages","Array","from","_","i","newArray","filter","data","toLowerCase","startIndex","rows","pagination","pageBtn","btn","disabled","page","btns","pageNumber","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20a944a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-container\":\"Table_table-container__1uQNj\",\"pagination\":\"Table_pagination__ydFcy\",\"pageBtn\":\"Table_pageBtn__38jsH\",\"btn\":\"Table_btn__2OnL_\",\"btns\":\"Table_btns__2W1sm\",\"btn-delete\":\"Table_btn-delete__ZETSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"TableBody_btn__1_DvX\",\"btn-edit\":\"TableBody_btn-edit__3qKdt\",\"btn-delete\":\"TableBody_btn-delete__noAGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-container\":\"SearchBar_search-container__1fq06\",\"search-bar\":\"SearchBar_search-bar__1dJ2J\"};","import React from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\nconst EditForm = (props) => {\r\n\tconst { editData, setTableData, tableData, setEditData } = props;\r\n\tconst [name, setName] = useState(editData[0].name);\r\n\tconst [email, setEmail] = useState(editData[0].email);\r\n\r\n\tconst nameChangeHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\r\n\tconst onEmailChangeHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetEmail(e.target.value);\r\n\t};\r\n\r\n\tconst onSaveHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst newData = editData[0];\r\n\t\tnewData.name = name;\r\n\t\tnewData.email = email;\r\n\t\tconst updatedData = tableData.map((item) =>\r\n\t\t\titem.id !== newData.id ? item : newData\r\n\t\t);\r\n\t\tconsole.log(updatedData);\r\n\t\tsetTableData(updatedData);\r\n\t\tsetEditData([]);\r\n\t\tsetName(\"\");\r\n\t\tsetEmail(\"\");\r\n\t};\r\n\treturn (\r\n\t\t<form type='submit'>\r\n\t\t\t<label>Name </label>\r\n\t\t\t<input type='text' value={name} onChange={nameChangeHandler} />\r\n\t\t\t<label>Email </label>\r\n\t\t\t<input type='text' value={email} onChange={onEmailChangeHandler} />\r\n\t\t\t<button onClick={onSaveHandler}>Save</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default EditForm;\r\n","import styles from \"./SearchBar.module.css\";\n\nconst SearchBar = (props) => {\n\tconst { searchFilter } = props;\n\tconst onChangeHandler = (event) => {\n\t\tsearchFilter(event.target.value);\n\t};\n\treturn (\n\t\t<div className={styles[\"search-container\"]}>\n\t\t\t<input\n\t\t\t\tclassName={styles[\"search-bar\"]}\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Type name to search'\n\t\t\t\tonChange={onChangeHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nimport styles from \"./TableBody.module.css\";\n\nconst TableBody = (props) => {\n\t// const [selectedRows, setSelectedRows] = useState([\"1\", \"2\"]);\n\t// const onDeleteHandler = (event) => {\n\t//   props.deleteData(event);\n\t// };\n\n\tconst { setSelectedRows, deleteSelectedRow, selectedRows, editRowHandler } =\n\t\tprops;\n\n\tconst onSelectRowHandler = (val) => {\n\t\tsetSelectedRows((prevState) => [...prevState, val]);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{props.tableData.map((row) => (\n\t\t\t\t<tr key={row.id}>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tonChange={() => onSelectRowHandler(row.name)}\n\t\t\t\t\t\t\tchecked={selectedRows.includes(row.name)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{row.name}</td>\n\t\t\t\t\t<td>{row.email}</td>\n\t\t\t\t\t<td>{row.role}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={`${styles[\"btn\"]} ${styles[\"btn-edit\"]}`}\n\t\t\t\t\t\t\tonClick={() => editRowHandler(row.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={`${styles[\"btn\"]} ${styles[\"btn-delete\"]}`}\n\t\t\t\t\t\t\tonClick={() => deleteSelectedRow(row.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t))}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default TableBody;\n","import React, { useEffect, useState } from \"react\";\nimport EditForm from \"./EditForm\";\nimport SearchBar from \"./SearchBar\";\nimport styles from \"./Table.module.css\";\nimport TableBody from \"./TableBody\";\n\nconst PREV = \"<<\";\nconst NEXT = \">>\";\nconst PAGE_SIZE = 10;\n\nconst Table = (props) => {\n\tconst [allData, setAllData] = useState([]);\n\tconst [tableData, setTableData] = useState([]);\n\tconst [paginatedData, setPaginatedData] = useState([]);\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [selectedRows, setSelectedRows] = useState([]);\n\tconst [isCheckedAll, setIsCheckedAll] = useState(false);\n\tconst [editData, setEditData] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetch(\n\t\t\t\"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\"\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tsetTableData(res);\n\t\t\t\tsetAllData(res);\n\t\t\t\tsetPaginatedData(res.slice(0, PAGE_SIZE));\n\t\t\t});\n\t}, []);\n\n\tconst pageCount = tableData ? Math.ceil(tableData.length / PAGE_SIZE) : 0;\n\tconst numberOfPages = Array.from({ length: pageCount }, (_, i) => i + 1);\n\n\tconst pagination = (pageNumber) => {\n\t\tsetCurrentPage(pageNumber);\n\t\tconst startIndex = (pageNumber - 1) * 10;\n\t\tsetPaginatedData(tableData.slice(startIndex, startIndex + PAGE_SIZE));\n\t};\n\n\tconst nextButtonHandler = () => {\n\t\tif (currentPage < pageCount) {\n\t\t\tsetCurrentPage((prevState) => prevState + 1);\n\t\t\tconst startIndex = currentPage * 10;\n\t\t\tsetPaginatedData(tableData.slice(startIndex, startIndex + PAGE_SIZE));\n\t\t\tselectedRows([]);\n\t\t}\n\t};\n\n\tconst prevButtonHandler = () => {\n\t\tif (currentPage > 1) {\n\t\t\tsetCurrentPage((prevState) => prevState - 1);\n\t\t\tconst startIndex = (currentPage - 2) * 10;\n\t\t\tsetPaginatedData(tableData.slice(startIndex, startIndex + PAGE_SIZE));\n\t\t\tselectedRows([]);\n\t\t}\n\t};\n\n\tconst onDeleteHandler = (val) => {\n\t\tconst newArray = tableData.filter((value) => val !== value.id);\n\t\tsetTableData(newArray);\n\t\tconst startIndex = (currentPage - 1) * 10;\n\t\tsetPaginatedData(newArray.slice(startIndex, startIndex + PAGE_SIZE));\n\t};\n\n\tconst onSelectAllRowsHandler = (rows) => {\n\t\tif (isCheckedAll) {\n\t\t\tsetSelectedRows([]);\n\t\t\tsetIsCheckedAll(false);\n\t\t} else {\n\t\t\tsetSelectedRows(rows.map((row) => row.name));\n\t\t\tsetIsCheckedAll(true);\n\t\t}\n\t};\n\n\tconst deleteSelectedRowsHandler = () => {\n\t\tconst newArray = tableData.filter(\n\t\t\t(row) => !selectedRows.includes(row.name)\n\t\t);\n\t\tsetTableData(newArray);\n\t\tconst startIndex = (currentPage - 1) * 10;\n\t\tsetPaginatedData(newArray.slice(startIndex, startIndex + PAGE_SIZE));\n\t\tsetSelectedRows([]);\n\t\tsetIsCheckedAll(false);\n\t};\n\n\tconst searchFilter = (val) => {\n\t\tconsole.log(\"start\");\n\t\tconst newArray = allData.filter((data) =>\n\t\t\tdata.name.toLowerCase().includes(val.toLowerCase())\n\t\t);\n\t\tsetTableData(newArray);\n\t\tconst startIndex = (currentPage - 1) * 10;\n\t\tsetPaginatedData(newArray.slice(startIndex, startIndex + PAGE_SIZE));\n\t\tsetSelectedRows([]);\n\t\tsetIsCheckedAll(false);\n\t};\n\n\tconst editRowHandler = (id) => {\n\t\tconst data = tableData.filter((data) => data.id === id);\n\t\tsetEditData(data);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<SearchBar searchFilter={searchFilter} />\n\t\t\t{editData.length > 0 ? (\n\t\t\t\t<EditForm\n\t\t\t\t\teditData={editData}\n\t\t\t\t\tsetTableData={setTableData}\n\t\t\t\t\ttableData={tableData}\n\t\t\t\t\tsetEditData={setEditData}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t\"\"\n\t\t\t)}\n\t\t\t<div className={styles[\"table-container\"]}>\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\tonChange={() => onSelectAllRowsHandler(paginatedData)}\n\t\t\t\t\t\t\t\t\tchecked={isCheckedAll}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t\t\t<th>Role</th>\n\t\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<TableBody\n\t\t\t\t\t\t\ttableData={paginatedData}\n\t\t\t\t\t\t\tdeleteSelectedRow={onDeleteHandler}\n\t\t\t\t\t\t\tsetSelectedRows={setSelectedRows}\n\t\t\t\t\t\t\tselectedRows={selectedRows}\n\t\t\t\t\t\t\teditRowHandler={editRowHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\n\t\t\t\t<div className={styles.pagination}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={styles[\"btn-delete\"]}\n\t\t\t\t\t\tonClick={deleteSelectedRowsHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete Selected\n\t\t\t\t\t</button>\n\t\t\t\t\t<span className={styles.pageBtn}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={styles.btn}\n\t\t\t\t\t\t\tonClick={prevButtonHandler}\n\t\t\t\t\t\t\tdisabled={+currentPage === 1}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{PREV}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{numberOfPages.map((page) => (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tkey={page}\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tpage === currentPage ? `${styles.btns}` : `${styles.btn}`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={() => pagination(page)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{page}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={styles.btn}\n\t\t\t\t\t\t\tonClick={nextButtonHandler}\n\t\t\t\t\t\t\tdisabled={+currentPage === +pageCount}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{NEXT}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Table;\n","import React from \"react\";\n\nimport Table from \"./components/Table\";\n\nimport \"./App.css\";\nfunction App() {\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Table />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}